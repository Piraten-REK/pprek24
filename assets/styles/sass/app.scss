@use 'colors';

$bootstrap-icons-font-dir: '/node_modules/bootstrap-icons/font/fonts';
@import '../../../node_modules/bootstrap-icons/font/bootstrap-icons';

@import 'fonts';

:root {
  --font-txt: 'Mulish', system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;

  // LIGHT THEME COLORS
  @include colors.light-colors;

  // DARK THEME COLORS
  @include colors.dark-colors;

  // THEME COLORS
  @include colors.set-theme;

  // ---------------------

  --max-width: 80ch;
  --site-padding-inline: 1rem;
  --header-block-size: 5rem;
  
  color-scheme: light dark;
  font-family: var(--font-txt);
  font-size: 100%;
  line-height: 1.5;
  color: var(--clr-txt-400);
}

@media (prefers-color-scheme: dark) {
  :root {
    @include colors.set-theme(dark);
  }
}

body[data-theme="light"] {
  color-scheme: light;
  @include colors.set-theme(light);
}

body[data-theme="dark"] {
  color-scheme: dark;
  @include colors.set-theme(dark);
}

*, *::before, *::after {
  box-sizing: border-box;
}

:where(*) {
  margin: 0;
  padding: 0;
}

*, *::before, *::after {
  box-sizing: border-box;
}

:where(*) {
  margin: 0;
  padding: 0;
}

html {
  inline-size: 100%;
  scroll-behavior: smooth;
}

body {
  background-color: var(--clr-site-bg);
  inline-size: 100%;
  min-block-size: 100vh;
  min-block-size: 100dvh;
  display: flex;
  flex-direction: column;
}

.layout {
  display: grid;
  grid-template-columns: [full-width-start breakout-left-start] var(--layout-padding-start, var(--site-padding-inline)) [content-start breakout-right-start] 1fr [content-end breakout-left-end] var(--layout-padding-end, var(--site-padding-inline)) [full-width-end breakout-right-end];
  grid-auto-rows: auto;
  justify-content: start;
  align-content: start;
}
:where(.layout > *) {
  grid-column: content;
  padding-inline: 0;
}
.full-width {
  grid-column: full-width;
  padding-inline: var(--layout-padding, var(--site-padding-inline));
}

.breakout-start {
  grid-column: breakout-left;
  padding-inline: 0 var(--layout-padding-end, var(--site-padding-inline));
}

.breakout-end {
  grid-column: breakout-right;
  padding-inline: var(--layout-padding-start, var(--site-padding-inline)) 0;
}

// Hide content visually while keeping it accessible to assistive technologies

// See: https://www.a11yproject.com/posts/2013-01-11-how-to-hide-content/
// See: https://kittygiraudel.com/2016/10/13/css-hide-and-seek/
.visually-hidden {
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important; // Fix for https://github.com/twbs/bootstrap/issues/25686
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
  
  // Fix for positioned table caption that could become anonymous cells
  &:not(caption) {
    position: absolute !important;
  }
}

// Use to only display content when it's focused, or one of its child elements is focused
// (i.e. when focus is within the element/container that the class was applied to)

// Useful for "Skip to main content" links; see https://www.w3.org/TR/2013/NOTE-WCAG20-TECHS-20130905/G1
.visually-hidden-focusable {
  &:not(:focus):not(:focus-within) {
    width: 1px !important;
    height: 1px !important;
    padding: 0 !important;
    margin: -1px !important; // Fix for https://github.com/twbs/bootstrap/issues/25686
    overflow: hidden !important;
    clip: rect(0, 0, 0, 0) !important;
    white-space: nowrap !important;
    border: 0 !important;
  }

  // Fix for positioned table caption that could become anonymous cells
  &:not(caption) {
    position: absolute !important;
  }
}

:where(button) {
  appearance: none;
  font: inherit;
  color: inherit;
  background: none;
  display: inline-block;
  border: none;
  cursor: pointer;
}
:where(input:not([type='radio'], [type='file'], [type='checkbox'])) {
  appearance: none;
  font: inherit;
  color: var(--clr-txt-400);
  background: none;
  background-color: var(--clr-input-bg);
  display: inline-block;
  border: 1px solid var(--clr-txt-200);
  padding-inline: .3em;
  border-radius: var(--input-border-radius);
  
  &:focus-visible {
    outline: 2px solid var(--clr-accent-400);
    outline-offset: 2px;
  }
}

:where(.btn) {
  background: var(--clr-accent-400);
  color: #fff;
  text-decoration: none;
  padding: .5em .6em;
  border-radius: .2em;

  &:where(:hover, :focus-visible) {
    background: var(--clr-accent-300);
  }

  &:focus-visible {
    outline: var(--clr-accent-300) solid .125em;
    outline-offset: .125em;
  }
}

@import 'header';