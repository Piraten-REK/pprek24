@use '../variables';
@use '../mixins';

.skip_nav {
  background: var(--clr-accent-400);
  color: white;
  padding: .12em .2em;
  position: absolute;
  inset: auto auto .5rem var(--site-inline-padding);
}

.site_nav__toggle {
  position: relative;
  z-index: 9990;

  @include variables.tablet {
    display: none;
  }

  svg {
    /* Size: 8 x 10 */
    block-size: 2rem;
    inline-size: auto;

    rect {
      fill: currentColor;
      width: 10px;
      height: 1px;
      rx: .5px;
      x: 0px;
      transition: all .3s ease-in-out;
      transform-origin: center center;

      &:nth-child(1) {
        y: 0px;
      }

      &:nth-child(2) {
        y: 4.5px;
        width: 8px;
        x: 2px;
      }

      &:nth-child(3) {
        y: 9px;
      }
    }
  }

  &[data-opened="true"] {
    svg rect {
      &:nth-child(1) {
        y: 4.5px;
        rotate: -45deg;
      }

      &:nth-child(2) {
        x: 1px;
        scale: 0 100%;
      }

      &:nth-child(3) {
        y: 4.5px;
        rotate: 45deg;
      }
    }
  }
}

.site_nav {
  &[aria-expanded='false'] {
    @include mixins.visually-hidden-focusable;
  }

  --padding-block: calc(var(--site-block-padding) / 2);
  --padding-inline: calc(var(--site-inline-padding) / 2);

  position: absolute;
  inset: var(--padding-block) var(--padding-inline) auto;
  z-index: 9980;
  background-color: hsl(0 0% 0% / 0.75);
  backdrop-filter: blur(.2rem);
  border-radius: .25rem;
  padding: calc(var(--site-logo-height) + var(--site-block-padding)) 1rem 1rem;

  li {
    list-style: none;
  }

  & > ul {
    // display: flex;
    // gap: 1.5rem;
    font-size: 1.5rem;
    font-weight: 700;
    letter-spacing: .02em;

    & > li {
      white-space: nowrap;

      &:has(a[aria-current]) > :where(a, span) {
        color: var(--clr-accent-400);
  
        &::after {
          content: '';
          position: absolute;
          inset: auto 0 -.3em 0;
          background-color: currentColor;
          border-radius: 100vmax;
          height: 3px;
        }
      }

      & > ul {
      }
    }
  }

  a {
    color: inherit;
    text-decoration: none;
    position: relative;
    display: flex;
    column-gap: .3em;
    align-items: center;
  
    &.active {
      color: var(--clr-accent-400);
  
      &::after {
        content: '';
        position: absolute;
        inset: auto 0 -.3em 0;
        background-color: currentColor;
        border-radius: 100vmax;
        height: 3px;
      }
    }
  
    &:where(:hover, :focus-visible) {
      color: var(--clr-accent-400);
    }
  }
}

@media not (scripting: enabled) {
  .site_header {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;

    &__nav_toggle {
      display: none;
    }

    &__nav ul {
      flex-wrap: wrap;
    }
  }
}

@media (not (scripting: enabled)) and (inline-size < 440px) {
  .site_header__nav ul {
    flex-direction: column;
  }
}