@use 'sass:list';

@mixin layout-full-width () {
  grid-column: full-width;
  padding-inline: var(--layout-padding);
}

@mixin layout-breakout-start () {
  grid-column: breakout-left;
  padding-inline: 0 var(--layout-padding-end);
}

@mixin layout-breakout-end () {
  grid-column: breakout-right;
  padding-inline: var(--layout-padding-start) 0;
}

@mixin layout ($padding: var(--site-inline-padding)) {
  $padding-start: list.nth($padding, 1);
  $padding-end: $padding-start;

  @if list.length($padding) == 2 {
    $padding-end: list.nth($padding, 2);
  }

  --layout-padding: #{$padding};
  --layout-padding-start: #{$padding-start};
  --layout-padding-end: #{$padding-end};

  display: grid;
  grid-template-columns:
    [full-width-start breakout-left-start] var(--layout-padding-start)
    [content-start breakout-right-start] 1fr
    [content-end breakout-left-end] var(--layout-padding-end)
    [full-width-end breakout-right-end];
  grid-auto-rows: auto;
  justify-content: start;
  align-content: start;

  :where(& > *) {
    grid-column: content;
    padding-inline: 0;
  }
}

.full-width {
  @include layout-full-width;
}

.breakout-start {
  @include layout-breakout-start;
}

.breakout-end {
  @include layout-breakout-end;
}

.layout {
  @include layout;
}

body {
  width: 100%;
  min-block-size: 100vh;
  min-block-size: 100dvh;
  display: flex;
  flex-direction: column;
}

main {
  @extend .layout;
  flex: 1 0 auto;
}